package capaGrafica;

import capaLogica.Pais;
import capaLogica.TipoUsuario;
import capaLogica.Usuario;
import capaPersistencias.PersistenciaPais;
import capaPersistencias.PersistenciaUsuario;
import java.awt.event.ItemEvent;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;


public class jFrmActualizarUsuario extends javax.swing.JFrame {
    Usuario usuario = new Usuario();
    /**
     * Creates new form jFrmAgregarUsuario
     */
    public jFrmActualizarUsuario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField5 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jlblUsuario = new javax.swing.JLabel();
        jlblClave = new javax.swing.JLabel();
        jlblNombre = new javax.swing.JLabel();
        jlblCorreo = new javax.swing.JLabel();
        jlblPais = new javax.swing.JLabel();
        jlblTipoUsuario = new javax.swing.JLabel();
        jtxtUsuario = new javax.swing.JTextField();
        jtxtNombre = new javax.swing.JTextField();
        jtxtCorreo = new javax.swing.JTextField();
        jcboPais = new javax.swing.JComboBox<>();
        jcboTipoUsuario = new javax.swing.JComboBox<>();
        jbtnGuardar = new javax.swing.JButton();
        jbtnSalir = new javax.swing.JButton();
        jpwdfClave = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jcboUsuario = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();

        jTextField5.setText("jTextField5");

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Actualizar Usuario");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jlblUsuario.setText("Usuario:");

        jlblClave.setText("Clave:");

        jlblNombre.setText("Nombre:");

        jlblCorreo.setText("Correo:");

        jlblPais.setText("Pa√≠s:");

        jlblTipoUsuario.setText("Tipo de Usuario:");

        jbtnGuardar.setText("Guardar");
        jbtnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnGuardarActionPerformed(evt);
            }
        });

        jbtnSalir.setText("Salir");
        jbtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSalirActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Seleccione el Usuario a Actualizar");

        jcboUsuario.setEditable(true);
        jcboUsuario.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcboUsuarioItemStateChanged(evt);
            }
        });
        jcboUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcboUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcboUsuario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jlblClave)
                                        .addComponent(jlblNombre)
                                        .addComponent(jlblCorreo)
                                        .addComponent(jlblPais)
                                        .addComponent(jlblTipoUsuario)
                                        .addComponent(jlblUsuario))
                                    .addGap(23, 23, 23)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jtxtUsuario)
                                        .addComponent(jtxtNombre)
                                        .addComponent(jtxtCorreo)
                                        .addComponent(jcboPais, 0, 148, Short.MAX_VALUE)
                                        .addComponent(jcboTipoUsuario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jpwdfClave)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jbtnGuardar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbtnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jcboUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblUsuario)
                    .addComponent(jtxtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblClave)
                    .addComponent(jpwdfClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblNombre)
                    .addComponent(jtxtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblCorreo)
                    .addComponent(jtxtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblPais)
                    .addComponent(jcboPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblTipoUsuario)
                    .addComponent(jcboTipoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnGuardar)
                    .addComponent(jbtnSalir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSalirActionPerformed
        //Cierra la ventana
        this.dispose();
    }//GEN-LAST:event_jbtnSalirActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //Carga el combo box con los usuarios
        for (Usuario usuario:PersistenciaUsuario.getArrayUsuarios()){
            jcboUsuario.addItem(usuario);
        }
        
        //Carga el combo box con los tipos de usuario
        for (TipoUsuario tipoUsuario:TipoUsuario.values()){
            jcboTipoUsuario.addItem(tipoUsuario);
        }
        
        //Carga el combo box con los paises
        for (Pais pais:PersistenciaPais.getArrayPaises()){
            jcboPais.addItem(pais);
        }
        
        //limpia la seleccion del combo box de usuarios
        jcboUsuario.setSelectedIndex(-1);
        
        //limpia los campos del form
        limpiarCampos();        
    }//GEN-LAST:event_formWindowOpened

    private void jbtnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnGuardarActionPerformed
        //Define un expresion regex para el email
        String emailPattern = "^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@" 
        + "[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$";
        
        //Define una expresion regex para el password
        String passwordPattern = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=\\S+$).{8,12}$";
        
        //Verifica que se haya introducido un usario sino envia mensaje de error
        // y devuelve el foco al campo 
        if(jtxtUsuario.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this, "Introduzca un usuario");
            jtxtUsuario.requestFocus();
            return;
        }
        
        //Verifica que la contrase√±a cumpla los parametros sino envia mensaje de error
        // y devuelve el foco al campo 
        if(!Pattern.matches(passwordPattern,this.jpwdfClave.getText())){
            JOptionPane.showMessageDialog(this, "La clave debe ser de 8 a 12 caracteres\n"
                                               +"Debe contener mayusculas\n"
                                               +"Debe contener minusculas\n"
                                               +"Debe contener numeros\n");
            jpwdfClave.selectAll();
            jpwdfClave.requestFocus();
            return;
        }
        
        //Verifica que se haya introducido un nombre sino envia mensaje de error
        // y devuelve el foco al campo 
        if(jtxtNombre.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this, "Introduzca un nombre");
            jtxtNombre.requestFocus();
            return;
        }
        
        //Verifica que el correo cumpla los parametros sino envia mensaje de error
        // y devuelve el foco al campo 
        if(!Pattern.matches(emailPattern,jtxtCorreo.getText())){
            JOptionPane.showMessageDialog(this, "El correo debe seguir el formato xxxx@xxx.com");
            jtxtCorreo.selectAll();
            jtxtCorreo.requestFocus();
            return;
        }
        
        //Verifica que se haya seleccionado un pais sino envia mensaje de error
        // y devuelve el foco al campo 
        if(jcboPais.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(this, "Seleccione un pais");
            jcboPais.requestFocus();
            return;
        }
        
        //Verifica que se haya seleccionado un tipo de usuario sino envia mensaje de error
        // y devuelve el foco al campo 
        if(jcboTipoUsuario.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(this, "Seleccione un tipo de usuario");
            jcboTipoUsuario.requestFocus();
            return;
        }
        
        // Se obtiene el usuario seleccionado
        usuario = (Usuario) jcboUsuario.getSelectedItem();
        
        // Se establecen los nuevos valores para el usuario
        usuario.setCorreo(jtxtCorreo.getText());
        usuario.setUsuario(jtxtUsuario.getText());
        usuario.setNombre(jtxtNombre.getText());
        usuario.setClave(jpwdfClave.getText());
        usuario.setPais((Pais) jcboPais.getSelectedItem());
        usuario.setTipoUsuario((TipoUsuario) jcboTipoUsuario.getSelectedItem());
        
        // Se manda a actualizar el usuario
        PersistenciaUsuario.actualizarUsuario(jcboUsuario.getSelectedIndex(), usuario);
        
        // Se despliega mensaje de confirmacion
        JOptionPane.showMessageDialog(null, "Usuario Actualizado", "", JOptionPane.INFORMATION_MESSAGE);
                  
        // Se limpia el combox de usuarios
        jcboUsuario.removeAllItems();
        //Se vuelven a cargar los usuarios al combo box en caso de actualizacion del nombre
        for (Usuario usuario:PersistenciaUsuario.getArrayUsuarios()){
            jcboUsuario.addItem(usuario);
        }
        // Se limpia la selccion del combox box de usuarios
        jcboUsuario.setSelectedIndex(-1);
        // se limpian los campos del form
        limpiarCampos();
        //se devuelve el foco al combo box de usuarios]
        jcboUsuario.requestFocus();
        
    }//GEN-LAST:event_jbtnGuardarActionPerformed

    private void jcboUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcboUsuarioActionPerformed
        
    }//GEN-LAST:event_jcboUsuarioActionPerformed

    private void jcboUsuarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcboUsuarioItemStateChanged
        try{
            //Veifica si se selecciono otro usuario
            if (evt.getStateChange() == ItemEvent.SELECTED) {
                // Se obtiene el usuario seleccionado
                usuario = (Usuario)jcboUsuario.getSelectedItem();
                // Se actualiza la informacion del los campos del form con la 
                // informacion del usuario seleccionado
                jtxtCorreo.setText(usuario.getCorreo());
                jtxtUsuario.setText(usuario.getUsuario());
                jtxtNombre.setText(usuario.getNombre());
                jpwdfClave.setText(usuario.getClave());
                jcboPais.setSelectedItem(usuario.getPais());
                jcboTipoUsuario.setSelectedItem(usuario.getTipoUsuario());
            }
        }
        catch(Exception e){ 
        }
    }//GEN-LAST:event_jcboUsuarioItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jFrmActualizarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jFrmActualizarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jFrmActualizarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jFrmActualizarUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jFrmActualizarUsuario().setVisible(true);
            }
        });
    }
    
    public void limpiarCampos(){
        //Se limpian los campos del form
        jtxtCorreo.setText("");
        jtxtUsuario.setText("");
        jtxtNombre.setText("");
        jpwdfClave.setText("");
        
        jcboPais.setSelectedIndex(-1);
        jcboTipoUsuario.setSelectedIndex(-1);
    }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JButton jbtnGuardar;
    private javax.swing.JButton jbtnSalir;
    private javax.swing.JComboBox<Pais> jcboPais;
    private javax.swing.JComboBox<TipoUsuario> jcboTipoUsuario;
    private javax.swing.JComboBox<Usuario> jcboUsuario;
    private javax.swing.JLabel jlblClave;
    private javax.swing.JLabel jlblCorreo;
    private javax.swing.JLabel jlblNombre;
    private javax.swing.JLabel jlblPais;
    private javax.swing.JLabel jlblTipoUsuario;
    private javax.swing.JLabel jlblUsuario;
    private javax.swing.JPasswordField jpwdfClave;
    private javax.swing.JTextField jtxtCorreo;
    private javax.swing.JTextField jtxtNombre;
    private javax.swing.JTextField jtxtUsuario;
    // End of variables declaration//GEN-END:variables
}
